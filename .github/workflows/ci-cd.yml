name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_VERSION: "20"
  NPM_VERSION: "10"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          npm run install:all

      - name: Build backend
        run: npm run build
        working-directory: ./packages/backend

      - name: Build frontend
        run: npm run build
        working-directory: ./packages/frontend

  deploy-backend:
    name: Deploy Backend to Heroku
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          echo "${{ secrets.HEROKU_API_KEY }}" | heroku auth:token --stdin

      - name: Deploy to Heroku
        run: |
          cd packages/backend
          heroku git:remote -a ${{ secrets.HEROKU_BACKEND_APP_NAME }}
          git push heroku main:main

  deploy-frontend:
    name: Deploy Frontend to Heroku
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          echo "${{ secrets.HEROKU_API_KEY }}" | heroku auth:token --stdin

      - name: Deploy to Heroku
        run: |
          cd packages/frontend
          heroku git:remote -a ${{ secrets.HEROKU_FRONTEND_APP_NAME }}
          git push heroku main:main
